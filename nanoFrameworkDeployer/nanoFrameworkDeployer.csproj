<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <ToolCommandName>nanoFrameworkDeployer</ToolCommandName>
    <PackageOutputPath>../</PackageOutputPath>
    <PackageId>nanoFrameworkDeployer</PackageId>
    <RootNamespace>nanoFrameworkDeployer</RootNamespace>
    <AssemblyName>nanoFrameworkDeployer</AssemblyName>
    <Authors>.NET nanoFramework project contributors</Authors>
    <Product>.NET nanoFramework Deployer</Product>
    <Authors>nanoframework</Authors>
    <Copyright>Copyright (c) .NET Foundation and Contributors</Copyright>
    <Company>.NET nanoFramework</Company>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/nanoframework/nanoFrameworkDeployer</RepositoryUrl>
    <PackageProjectUrl>https://github.com/nanoframework/nanoFrameworkDeployer</PackageProjectUrl>
    <PackageIconUrl></PackageIconUrl>
    <Description>This package includes the .NET nanoFrameworkDeployer library that allows developing applications that deploy .NET nanoFramework assemblies.</Description>
    <!-- need this to allow async Main() -->
    <LangVersion>latest</LangVersion>
    <!--<PackAsTool>true</PackAsTool> only available after .net 5-->
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Platforms>AnyCPU</Platforms>
    <RuntimeIdentifiers>any</RuntimeIdentifiers>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net6'">
    <PublishSingleFile>true</PublishSingleFile>
    <SelfContained>true</SelfContained>
    <PackAsTool>true</PackAsTool>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net7'">
    <PackAsTool>true</PackAsTool>
    <PublishSingleFile>true</PublishSingleFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TF_BUILD)' == 'true' or '$(ContinuousIntegrationBuild)' == 'true'">
    <!-- net6 is not yet compatible with the underlying libs?!. -->
    <!-- TODO: given that, we need https://github.com/Fody/Costura -->
    <TargetFrameworks>net472;net48</TargetFrameworks>
    <!-- Restore the exact packages as listed in the lock file -->
    <RestoreLockedMode>true</RestoreLockedMode>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>
  <PropertyGroup Condition="'$(VSCodeExtensionBuild)' == 'true'">
    <TargetFrameworks>net472;net48</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(BuildingInsideVisualStudio)' == 'true'">
    <!-- Generate the lock file -->
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <TargetFrameworks>net472;net48</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TF_BUILD)' != 'true' and '$(ContinuousIntegrationBuild)' != 'true' and '$(BuildingInsideVisualStudio)' != 'true' and '$(VSCodeExtensionBuild)' != 'true'">
    <!-- Used for local test of pack, probably a better way-->
    <TargetFrameworks>net472;net48</TargetFrameworks>
  </PropertyGroup>
  
  <PropertyGroup>
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
    <PackageIcon>images\nf-logo.png</PackageIcon>
    <PackageTags>nanoFramework, nano Framework, NETNF, NETMF, Micro Framework, .net</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="nanoFrameworkDeployer.Tests" />
  </ItemGroup>

  <ItemGroup>
  <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\assets\nf-logo.png">
      <Pack>True</Pack>
      <PackagePath>images</PackagePath>
    </None>
    <None Include="..\LICENSE.md">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <!-- This is to allow the .NET Framework references to be machine-indepenedent so builds can happen without installing prerequisites -->
    <PackageReference Include="Costura.Fody" Version="5.7.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3" PrivateAssets="All" />
    <PackageReference Include="CommandLineParser" Version="2.9.1" />
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.4.255">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="nanoFramework.Tools.Debugger.Net" Version="2.4.3" />
    <PackageReference Include="Polly" Version="7.2.3" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
    <PackageReference Include="TestableIO.System.IO.Abstractions" Version="17.2.26" />
    <PackageReference Include="TestableIO.System.IO.Abstractions.Wrappers" Version="17.2.26" />
    <PackageReference Include="Fody" Version="6.6.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="PropertyChanged.Fody">
      <Version>4.1.0</Version>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

</Project>
